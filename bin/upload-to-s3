#!/bin/bash
set -euo pipefail

bin="$(dirname "$0")"

main() {
    local quiet=0

    for arg; do
        case "$arg" in
            --quiet)
                quiet=1
                shift;;
            *)
                break;;
        esac
    done

    local src="${1:?A source file is required as the first argument.}"
    local dst="${2:?A destination s3:// URL ending in .gz is required as the second argument.}"

    if [[ "$dst" != *.gz ]]; then
        echo "The given destination s3:// URL must point to a gzip file ending in .gz"
        exit 1
    fi

    local src_hash="$("$bin/sha256sum" < "$src")"
    local s3path="${dst#s3://}"
    local bucket="${s3path%%/*}"
    local key="${s3path#*/}"

    local dst_hash="$(aws s3api head-object --bucket "$bucket" --key "$key" --query Metadata.sha256sum --output text)"

    echo "$src_hash $src"
    echo "$dst_hash $dst"

    if [[ $src_hash != $dst_hash ]]; then
        echo "Uploading zipped $src â†’ $dst"
        gzip -c "$src" | aws s3 cp --no-progress - "$dst" --metadata sha256sum="$src_hash"

        if [[ $quiet == 1 ]]; then
            echo "Quiet mode. No Slack notification sent."
            exit 0
        fi

        if ! "$bin"/notify-slack "Updated $dst available."; then
            echo "Notifying Slack failed, but exiting with success anyway."
        fi
    else
        echo "Files are identical, skipping upload"
    fi
}

main "$@"
